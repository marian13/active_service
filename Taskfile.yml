version: '3'

##
# IMPORTANT: All tasks listed in this file should be executed from the root folder.
# https://taskfile.dev/usage/#task-directory
#
# NOTE: Examples of multiline strings in YAML.
# https://yaml-multiline.info/
#
# NOTE: Use `[ "${IN_DOCKER_CONTAINER}" == "true" ] && echo true || echo false` to debug ``[ "${IN_DOCKER_CONTAINER}" == "true" ]`.
#
# NOTE: Forwarding CLI arguments to commands ({{.CLI_ARGS}}).
# https://taskfile.dev/usage/#forwarding-cli-arguments-to-commands
#
tasks:
  default:
    cmds:
      - task: test

  ##
  # NOTE: Usage examples.
  #   APPRAISAL=all task console
  #   APPRAISAL=dry task console
  #   APPRAISAL=rails_5.2 task console
  #   APPRAISAL=rails_6.0 task console
  #   APPRAISAL=rails_6.1 task console
  #   APPRAISAL=rails_7.0 task console
  #   task console
  #
  # NOTE: Setting `APPRAISAL` after `task console` does NOT work. Consider to open an issue.
  # NOTE: `task console` is also aliased as `task playground`.
  # NOTE: `APPRAISAL_COMMAND` must be kept in sync with `Appraisals` file.
  #
  console:
    cmds:
      - bundle exec {{.APPRAISAL_COMMAND}} rake playground
    vars:
      APPRAISAL_COMMAND:
        sh: ruby -e 'puts "appraisal" + " " + RUBY_ENGINE + "_" + RUBY_VERSION + "_" + ENV["APPRAISAL"] unless ENV["APPRAISAL"].to_s.empty?'
    interactive: true

  coverage:lcov:merge:
    cmds:
      - npx --yes lcov-result-merger 'coverage/**/lcov.info' coverage/lcov.info

  coverage:open:
    cmds:
      - open coverage/index.html
    preconditions:
      - sh: '[ "${IN_DOCKER_CONTAINER}" != "true" ]'
        msg: This task can be invoked only from the host operating system (https://www.ibm.com/cloud/learn/containerization)

  deps:
    cmds:
      - task: deps:install

  ##
  # NOTE: `task deps:install` is also aliased as `task install`.
  #
  deps:install:
    cmds:
      - bundle install
      - bundle exec appraisal install

  deps:clean:
    cmds:
      - "bundle exec rake confirm \"This task removes Gemfile*.lock and gemfiles/**/*. Are you sure?\""
      - rm Gemfile*.lock
      - rm -rf gemfiles

  ##
  # NOTE: Usage examples.
  #   task docker:bash ENGINE=ruby VERSION=2.7
  #   task docker:bash ENGINE=ruby VERSION=3.0
  #   task docker:bash ENGINE=ruby VERSION=3.1
  #   task docker:bash ENGINE=ruby VERSION=3.2
  #   task docker:bash ENGINE=ruby VERSION=3.3
  #   task docker:bash ENGINE=jruby VERSION=9.4
  #   task docker:bash ENGINE=truffleruby VERSION=22.3
  #
  # NOTE: JRuby 9.4 aims CRuby 3.1 compatibility.
  # - https://www.jruby.org/download
  #
  # NOTE: TruffleRuby 22.3 aims CRuby 3.1 compatibility.
  # - https://github.com/oracle/truffleruby/blob/master/doc/user/compatibility.md
  #
  # NOTE: Naming `ENGINE` is inspired by `ruby_engine` gem.
  # - https://github.com/janlelis/ruby_engine
  #
  docker:bash:
    cmds:
      - docker run --rm -it -v $(pwd):/gem convenient_service:{{.ENGINE}}-{{.VERSION}} bash
    interactive: true
    preconditions:
      - sh: '[ "${IN_DOCKER_CONTAINER}" != "true" ]'
        msg: This task can be invoked only from the host operating system (https://www.ibm.com/cloud/learn/containerization)
    requires:
      vars: [ENGINE, VERSION]

  ##
  # NOTE: Usage examples.
  #   task docker:build ENGINE=ruby VERSION=2.7
  #   task docker:build ENGINE=ruby VERSION=3.0
  #   task docker:build ENGINE=ruby VERSION=3.1
  #   task docker:build ENGINE=ruby VERSION=3.2
  #   task docker:build ENGINE=ruby VERSION=3.3
  #   task docker:build ENGINE=jruby VERSION=9.4
  #   task docker:build ENGINE=truffleruby VERSION=22.3
  #
  # NOTE: JRuby 9.4 aims CRuby 3.1 compatibility.
  # - https://www.jruby.org/download
  #
  # NOTE: TruffleRuby 22.3 aims CRuby 3.1 compatibility.
  # - https://github.com/oracle/truffleruby/blob/master/doc/user/compatibility.md
  #
  # NOTE: Naming `ENGINE` is inspired by `ruby_engine` gem.
  # - https://github.com/janlelis/ruby_engine
  #
  # NOTE: Meaning of `|| 2> /dev/null`.
  # - https://stackoverflow.com/a/10250395/12201472
  #
  # NOTE: Meaning of `|| true`.
  # - https://superuser.com/a/887349/1180656
  #
  docker:build:
    cmds:
      - rm Gemfile.{{.ENGINE}}-{{.VERSION}} 2> /dev/null || true
      - rm Gemfile.{{.ENGINE}}-{{.VERSION}}.lock 2> /dev/null || true
      - cp Gemfile Gemfile.{{.ENGINE}}-{{.VERSION}}
      - docker build . -f docker/{{.ENGINE}}-{{.VERSION}}/Dockerfile -t convenient_service:{{.ENGINE}}-{{.VERSION}}
    preconditions:
      - sh: '[ "${IN_DOCKER_CONTAINER}" != "true" ]'
        msg: This task can be invoked only from the host operating system (https://www.ibm.com/cloud/learn/containerization)
    requires:
      vars: [ENGINE, VERSION]

  docker:build:all:
    cmds:
      - task: docker:build ENGINE=ruby VERSION=2.7
      - task: docker:build ENGINE=ruby VERSION=3.0
      - task: docker:build ENGINE=ruby VERSION=3.1
      - task: docker:build ENGINE=ruby VERSION=3.2
      - task: docker:build ENGINE=ruby VERSION=3.3
      - task: docker:build ENGINE=jruby VERSION=9.4
      - task: docker:build ENGINE=truffleruby VERSION=22.3
    preconditions:
      - sh: '[ "${IN_DOCKER_CONTAINER}" != "true" ]'
        msg: This task can be invoked only from the host operating system (https://www.ibm.com/cloud/learn/containerization)

  ##
  # NOTE: Dev only command.
  # NOTE: macOS specific command.
  #
  docker:start:
    cmds:
      - open -a Docker

  ##
  # NOTE: `sdoc` (wrapper for `rdoc`) is replaced by `yard`, since you have a feeling like every time is a first time with `rdoc`.
  # - https://kapeli.com/cheat_sheets/Yard.docset/Contents/Resources/Documents/index
  # - https://rubydoc.info/gems/yard/file/README.md
  # - `yardoc --help`
  #
  # NOTE: `commonmarker` supports GitHub Flavored Markdown.
  # - https://github.com/gjtorikian/commonmarker
  # - https://github.github.com/gfm/
  # - https://github.com/github/markup#markups
  # - https://github.com/lsegal/yard/pull/1388
  #
  # TODO: Contribute. Forward `--parse-option LIBERAL_HTML_TAG` to commonmarker.
  #
  # NOTE: Options are specified in the `.yardopts` file.
  #
  docs:generate:
    cmds:
      ##
      # NOTE: yard supports plugins as gems only.
      # - https://rubydoc.info/gems/yard/file/docs/GettingStarted.md#plugin-support
      #
      # NOTE: `RUBYLIB` is used to extend Ruby's `$LOAD_PATH`. This way yard treats `./yard` folder as a directory with custom gems.
      #
      - RUBYLIB=./yard bundle exec yardoc

  docs:generate:open:
    cmds:
      - task: docs:generate
      - open docs/index.html
    preconditions:
      - sh: '[ "${IN_DOCKER_CONTAINER}" != "true" ]'
        msg: This task can be invoked only from the host operating system (https://www.ibm.com/cloud/learn/containerization)

  docs:lint:
    cmds:
      - task: yard_junk

  docs:missed:
    cmds:
      ##
      # NOTE: `RUBYLIB` is used to extend Ruby's `$LOAD_PATH`. This way yard treats `./yard` folder as a directory with custom gems.
      # NOTE: Options are taken from `.inch.yml`.
      #
      - RUBYLIB=./yard bundle exec inch

  ##
  # NOTE: `yard` server is running on `localhost:8808` be default.
  #
  docs:server:
    cmds:
      ##
      # NOTE: `RUBYLIB` is used to extend Ruby's `$LOAD_PATH`. This way yard treats `./yard` folder as a directory with custom gems.
      # NOTE: Options are specified in the `.yardopts` file.
      #
      - RUBYLIB=./yard bundle exec yard server
    preconditions:
      - sh: '[ "${IN_DOCKER_CONTAINER}" != "true" ]'
        msg: This task can be invoked only from the host operating system (https://www.ibm.com/cloud/learn/containerization)

  ##
  # NOTE: `yard` server is running on `localhost:8808` be default.
  #
  docs:server:open:
    cmds:
      ##
      # NOTE: See https://ss64.com/mac/open.html for `open` options.
      #
      - open -na "Google Chrome" --args --new-window --incognito "http://localhost:8808"
      - task: docs:server

  ##
  # NOTE: Dev only command.
  #
  editor:open:
    cmds:
      - code .

  ##
  # NOTE: A trailing "/**" matches everything inside.
  # - https://git-scm.com/docs/gitignore
  #
  git:staged:minitest:
    cmds:
      - git diff --cached --name-only --diff-filter=d "test/**"

  ##
  # NOTE: A trailing "/**" matches everything inside.
  # - https://git-scm.com/docs/gitignore
  #
  git:staged:rspec:
    cmds:
      - git diff --cached --name-only --diff-filter=d "spec/**"

  ##
  # NOTE: Dev only command.
  # NOTE: macOS specific command.
  #
  github:open:
    cmds:
      - open -na "Google Chrome" --args --new-window --incognito "https://github.com/marian13/convenient_service"

  ##
  # NOTE: `task install` is also aliased as `task deps:install`.
  #
  install:
    cmds:
      - task: deps:install

  ##
  # NOTE: Usage examples.
  #   task lint
  #   AUTOCORRECT=true task lint
  #
  lint:
    cmds:
      - task: rubocop
      - task: docs:lint

  minitest:
    cmds:
      - bundle exec ruby minitest.rb {{.GIT_STAGED_MINITEST_FILES}} {{.CLI_ARGS}}
    vars:
      GIT_STAGED_MINITEST_FILES:
        sh: ruby -e 'puts `task git:staged:minitest --silent` if ENV["STAGED"] == "true"'

  ##
  # - https://github.com/mbj/mutant/blob/main/docs/mutant-rspec.md#run-through-example
  #
  mutant:
    cmds:
      - bundle exec mutant run --include lib --require convenient_service --integration rspec -- 'ConvenientService*'

  ##
  # NOTE: Usage examples.
  #   APPRAISAL=all task playground
  #   APPRAISAL=dry task playground
  #   APPRAISAL=rails_5.2 task playground
  #   APPRAISAL=rails_6.0 task playground
  #   APPRAISAL=rails_6.1 task playground
  #   APPRAISAL=rails_7.0 task playground
  #   task playground
  #
  # NOTE: Setting `APPRAISAL` after `task playground` does NOT work. Consider to open an issue.
  # NOTE: `task playground` is also aliased as `task console`.
  # NOTE: `APPRAISAL_COMMAND` must be kept in sync with `Appraisals` file.
  #
  playground:
    cmds:
      - bundle exec {{.APPRAISAL_COMMAND}} rake playground
    vars:
      APPRAISAL_COMMAND:
        sh: ruby -e 'puts "appraisal" + " " + RUBY_ENGINE + "_" + RUBY_VERSION + "_" + ENV["APPRAISAL"] unless ENV["APPRAISAL"].to_s.empty?'
    interactive: true

  release:
    cmds:
      - gem release

  ##
  # NOTE: Usage examples.
  #   task rspec
  #   APPRAISAL=all task rspec
  #   APPRAISAL=dry task rspec
  #   APPRAISAL=rails_5.2 task rspec
  #   APPRAISAL=rails_6.0 task rspec
  #   APPRAISAL=rails_6.1 task rspec
  #   APPRAISAL=rails_7.0 task rspec
  #
  # NOTE: It is also possible to run specs only for git staged files.
  #   STAGED=true APPRAISAL=rails_7.0 task rspec
  #
  # NOTE: git staged docs.
  # - https://githowto.com/staging_and_committing
  #
  # NOTE: Setting `APPRAISAL` after `task rspec` does NOT work. Consider to open an issue.
  # NOTE: `APPRAISAL_COMMAND` must be kept in sync with `Appraisals` file.
  #
  rspec:
    cmds:
      - bundle exec {{.APPRAISAL_PREFIX}} rspec --format progress {{.REQUIRE_SUFFIX}} {{.GIT_STAGED_RSPEC_FILES}} {{.CLI_ARGS}}
    vars:
      APPRAISAL_PREFIX:
        sh: ruby -e 'puts "appraisal" + " " + RUBY_ENGINE + "_" + RUBY_VERSION + "_" + ENV["APPRAISAL"] unless ENV["APPRAISAL"].to_s.empty?'
      REQUIRE_SUFFIX:
        sh: ruby -e 'puts case ENV["APPRAISAL"] when /rails/ then "--require rails_helper" when /dry/ then "--require dry_helper" end'
      GIT_STAGED_RSPEC_FILES:
        sh: ruby -e 'puts `task git:staged:rspec --silent` if ENV["STAGED"] == "true"'

  rspec:all:
    cmds:
      - task: rspec
      - task: rspec
        vars:
          APPRAISAL: rails_7.0
      - task: rspec
        vars:
          APPRAISAL: rails_6.1
      - task: rspec
        vars:
          APPRAISAL: rails_6.0
      - task: rspec
        vars:
          APPRAISAL: rails_5.2
      - task: rspec
        vars:
          APPRAISAL: dry

  ##
  # NOTE: Usage examples.
  #   task rubocop
  #   AUTOCORRECT=true task rubocop
  #
  rubocop:
    cmds:
      - bundle exec rubocop --config .rubocop.yml {{.AUTOCORRECT_SUFFIX}} {{.CLI_ARGS}}
    vars:
      AUTOCORRECT_SUFFIX:
        sh: ruby -e 'puts "-A" if ENV["AUTOCORRECT"] == "true"'

  test:
    cmds:
      - task: rspec:all
      - task: minitest

  ##
  # NOTE: Dev only command.
  #
  tmuxinator:start:
    cmds:
      - tmuxinator start convenient_service --project-config=.dev/.tmuxinator.yml

  yard_junk:
    cmds:
      - mkdir -p docs
      ##
      # NOTE: yard supports plugins as gems only.
      # - https://rubydoc.info/gems/yard/file/docs/GettingStarted.md#plugin-support
      #
      # NOTE: `RUBYLIB` is used to extend Ruby's `$LOAD_PATH`. This way yard treats `./yard` folder as a directory with custom gems.
      #
      - RUBYLIB=./yard bundle exec yard-junk --text --html docs/junk-yard.html
